Function: _parforvec_init
Class: gp2c_internal
Help: Initializes parameters for parforvec.
Description:
 (parforvec,vec,closure,?small):void    parforvec_init(&$1, $2, $3, $4)

Function: _parforvec_next
Class: gp2c_internal
Help: Next value for parforvec.
Description:
 (parforvec):gen    parforvec_next(&$1)

Function: _parforvec_stop
Class: gp2c_internal
Help: Stop function for parforvec.
Description:
 (parforvec):void    parforvec_stop(&$1)

Function: parforvec
Section: programming/parallel
C-Name: parforvec0
Prototype: vV=GJDVDID0,L,
Iterator:
 (vec,vec,closure,?notype,?small) (parforvec, _parforvec_init, _parforvec_next, _parforvec_stop)
Help: parforvec(X=v,expr1,{j},{expr2},{flag}): evaluates the sequence expr2
 (dependent on X and j) for X as generated by forvec, in random order,
 computed in parallel. Substitute for j the value of expr1 (dependent on X).
Doc: evaluates the sequence \kbd{expr2} (dependent on $X$ and $j$) for $X$
 as generated by \kbd{forvec}, in random order, computed in parallel. Substitute
 for $j$ the value of \kbd{expr1} (dependent on $X$).

 It is allowed fo \kbd{expr2} to exit the loop using
 \kbd{break}/\kbd{next}/\kbd{return}, however in that case, \kbd{expr2} will
 still be evaluated for all remaining value of $p$ less than the current one,
 unless a subsequent \kbd{break}/\kbd{next}/\kbd{return} happens.
 %\syn{NO}
