%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 3
%%BoundingBox: 0 0 306 269
%%BeginProlog
/L { /y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
newpath   x1 y1 moveto x2 y2 lineto
stroke}
bind def
/R { /dy exch def
/dx exch def
/y exch def
/x exch def
newpath
x y moveto
dx 0 rlineto
0 dy rlineto
dx neg 0 rlineto
closepath stroke
} bind def
/CL {
/dy exch def
/dx exch def
/y exch def
/x exch def
newpath
x y moveto
dx 0 rlineto
0 dy rlineto
dx neg 0 rlineto
closepath
clip
} bind def
/FR { /dy exch def
/dx exch def
/y exch def
/x exch def
currentlinewidth 0 setlinewidth newpath
x y moveto
dx 0 rlineto
0 dy rlineto
dx neg 0 rlineto
closepath fill setlinewidth
} bind def
/GS { gsave } bind  def
/GR { grestore } bind def
/SP { showpage } bind def
/LW { setlinewidth } bind def
/CF /Courier def
/SF { /CF exch def } bind def
/fsize 12 def
/FS { /fsize exch def fsize CF findfont exch scalefont setfont }def 
/GL { setgray } bind def
/SRGB { setrgbcolor } bind def
/CI { GS /py exch def /px exch def /sy exch def /sx exch def
translate 
sx sy scale px py 8 
[ px 0 0 py neg 0 py ]
currentfile /ASCIIHexDecode filter
 false 3 colorimage GR
} bind def
/GI { GS /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale px py 8 
[ px 0 0 py neg 0 py ]
currentfile /ASCIIHexDecode filter
image GR
} bind def
/MI { GS /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale px py false 
[ px 0 0 py neg 0 py ]
currentfile /ASCIIHexDecode filter
imagemask GR
} bind def
/CII {GS /inter exch def /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale
/DeviceRGB setcolorspace
/IDD 8 dict def
IDD begin
/ImageType 1 def
/Width px def
/Height py def
/BitsPerComponent 8 def
/Interpolate inter def
/DataSource currentfile /ASCIIHexDecode filter def
/MultipleDataSources false def
/ImageMatrix [ px 0 0 py neg 0 py ] def
/Decode [ 0 1 0 1 0 1 ] def
end
IDD image GR} bind def
/GII {GS /inter exch def /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale
/DeviceGray setcolorspace
/IDD 8 dict def
IDD begin
/ImageType 1 def
/Width px def
/Height py def
/BitsPerComponent 8 def
/Interpolate inter def
/DataSource currentfile /ASCIIHexDecode filter def
/MultipleDataSources false def
/ImageMatrix [ px 0 0 py neg 0 py ] def
/Decode [ 0 1 ] def
end
IDD image GR} bind def
/CIM {GS /inter exch def /my exch def /mx exch def /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale
/DeviceRGB setcolorspace
/IDD 8 dict def
IDD begin
/ImageType 1 def
/Width px def
/Height py def
/BitsPerComponent 8 def
/Interpolate inter def
/DataSource currentfile /ASCIIHexDecode filter def
/MultipleDataSources false def
/ImageMatrix [ px 0 0 py neg 0 py ] def
/Decode [ 0 1 0 1 0 1 ] def
end
/IMD 8 dict def
IMD begin
/ImageType 1 def
/Width mx def
/Height my def
/BitsPerComponent 1 def
/ImageMatrix [ mx 0 0 my neg 0 my ] def
/Decode [ 1 0 ] def
end
<<
/ImageType 3
/InterleaveType 2
/MaskDict IMD
/DataDict IDD
>> image GR
} bind def
/GIM {GS /inter exch def /my exch def /mx exch def /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale
/DeviceGray setcolorspace
/IDD 8 dict def
IDD begin
/ImageType 1 def
/Width px def
/Height py def
/BitsPerComponent 8 def
/Interpolate inter def
/DataSource currentfile /ASCIIHexDecode filter def
/MultipleDataSources false def
/ImageMatrix [ px 0 0 py neg 0 py ] def
/Decode [ 0 1 ] def
end
/IMD 8 dict def
IMD begin
/ImageType 1 def
/Width mx def
/Height my def
/BitsPerComponent 1 def
/ImageMatrix [ mx 0 0 my neg 0 my ] def
/Decode [ 1 0 ] def
end
<<
/ImageType 3
/InterleaveType 2
/MaskDict IMD
/DataDict IDD
>> image GR
} bind def

/BFP { newpath moveto }  def
/BP { newpath } bind def 
/PL { lineto } bind def 
/PM { moveto } bind def 
/MT { moveto } bind def 
/LT { lineto } bind def 
/EFP { closepath fill } bind def
/ELP { stroke } bind def
/ECP { closepath stroke } bind def
/LW { setlinewidth } bind def
/TR { translate } bind def
/CT { concat } bind def
/RCT { matrix invertmatrix concat} bind def
/SC { scale } bind def
/CS { clipsave } bind def
/CR { cliprestore } bind def
%%EndProlog
%%Page: 1 1
%%PageOrientation: Portrait
save
GS
0 269 TR
1 -1  SC
GS
CS
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
CR
GR
GS
0 0 TR
0.59535 0.59535 SC
CS
CR
CS
-0.5 -0.5 515 453 CL
1 GL
-0.5 -0.5 515 453 FR
0 GL
GS
BP
0 0 MT
514 0 LT
514 452 LT
0 452 LT
ECP
GR
CR
CS
-0.5 -0.5 515 453 CL
0 GL
/Helvetica SF
20 FS
0 GL
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
165 225 169 229 L
GR
GS
165 229 169 225 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
/Helvetica SF
20 FS
GS
170 228 moveto
[1 0 0 -1 0 0] concat

(A) show
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
0 GL
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
391 225 395 229 L
GR
GS
391 229 395 225 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
/Helvetica SF
20 FS
GS
396 228 moveto
[1 0 0 -1 0 0] concat

(B) show
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
0 GL
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
256 202 260 206 L
GR
GS
256 206 260 202 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
/Helvetica SF
20 FS
GS
242 222 moveto
[1 0 0 -1 0 0] concat

(P) show
GR
0 GL
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
391 134 395 138 L
GR
GS
391 138 395 134 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
/Helvetica SF
20 FS
GS
396 137 moveto
[1 0 0 -1 0 0] concat

(Q) show
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
0 GL
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
0 333 515 75 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
0 0 1 SRGB
2 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
258 204 393 136 L
GR
0 GL
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
167 227 393 227 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
0 GL
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
210 225 214 229 L
GR
GS
210 229 214 225 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
/Helvetica SF
20 FS
GS
215 245 moveto
[1 0 0 -1 0 0] concat

(S) show
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
0 GL
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
352 154 356 158 L
GR
GS
352 158 356 154 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
/Helvetica SF
20 FS
GS
335 157 moveto
[1 0 0 -1 0 0] concat

(M) show
GR
1 0 1 SRGB
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
167 227 354 156 L
GR
GS
354 156 393 227 L
GR
GS
393 227 393 227 L
GR
1 0 0 SRGB
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
167 227 258 204 L
GR
GS
258 204 393 227 L
GR
GS
393 227 393 227 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
0 GL
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
257 0 257 453 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
0 GL
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
256 190 260 194 L
GR
GS
256 194 260 190 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
/Helvetica SF
20 FS
GS
261 193 moveto
[1 0 0 -1 0 0] concat

(K) show
GR
0 1 0 SRGB
1 setlinewidth
0 setlinecap
0 setlinejoin
[] 0 setdash
GS
258 192 393 227 L
GR
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
CR
CS
-0.5 -0.5 515 453 CL
0 GL
/Helvetica SF
20 FS
/Helvetica SF
20 FS
CR
CS
GR
 restore
