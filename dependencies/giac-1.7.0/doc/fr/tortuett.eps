%!PS-Adobe-3.0 EPSF-3.0
%%LanguageLevel: 3
%%BoundingBox: 0 0 293 158
%%BeginProlog
/L { /y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
newpath   x1 y1 moveto x2 y2 lineto
stroke}
bind def
/R { /dy exch def
/dx exch def
/y exch def
/x exch def
newpath
x y moveto
dx 0 rlineto
0 dy rlineto
dx neg 0 rlineto
closepath stroke
} bind def
/CL {
/dy exch def
/dx exch def
/y exch def
/x exch def
newpath
x y moveto
dx 0 rlineto
0 dy rlineto
dx neg 0 rlineto
closepath
clip
} bind def
/FR { /dy exch def
/dx exch def
/y exch def
/x exch def
currentlinewidth 0 setlinewidth newpath
x y moveto
dx 0 rlineto
0 dy rlineto
dx neg 0 rlineto
closepath fill setlinewidth
} bind def
/GS { gsave } bind  def
/GR { grestore } bind def
/SP { showpage } bind def
/LW { setlinewidth } bind def
/CF /Courier def
/SF { /CF exch def } bind def
/fsize 12 def
/FS { /fsize exch def fsize CF findfont exch scalefont setfont }def 
/GL { setgray } bind def
/SRGB { setrgbcolor } bind def
/CI { GS /py exch def /px exch def /sy exch def /sx exch def
translate 
sx sy scale px py 8 
[ px 0 0 py neg 0 py ]
currentfile /ASCIIHexDecode filter
 false 3 colorimage GR
} bind def
/GI { GS /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale px py 8 
[ px 0 0 py neg 0 py ]
currentfile /ASCIIHexDecode filter
image GR
} bind def
/MI { GS /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale px py false 
[ px 0 0 py neg 0 py ]
currentfile /ASCIIHexDecode filter
imagemask GR
} bind def
/CII {GS /inter exch def /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale
/DeviceRGB setcolorspace
/IDD 8 dict def
IDD begin
/ImageType 1 def
/Width px def
/Height py def
/BitsPerComponent 8 def
/Interpolate inter def
/DataSource currentfile /ASCIIHexDecode filter def
/MultipleDataSources false def
/ImageMatrix [ px 0 0 py neg 0 py ] def
/Decode [ 0 1 0 1 0 1 ] def
end
IDD image GR} bind def
/GII {GS /inter exch def /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale
/DeviceGray setcolorspace
/IDD 8 dict def
IDD begin
/ImageType 1 def
/Width px def
/Height py def
/BitsPerComponent 8 def
/Interpolate inter def
/DataSource currentfile /ASCIIHexDecode filter def
/MultipleDataSources false def
/ImageMatrix [ px 0 0 py neg 0 py ] def
/Decode [ 0 1 ] def
end
IDD image GR} bind def
/CIM {GS /inter exch def /my exch def /mx exch def /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale
/DeviceRGB setcolorspace
/IDD 8 dict def
IDD begin
/ImageType 1 def
/Width px def
/Height py def
/BitsPerComponent 8 def
/Interpolate inter def
/DataSource currentfile /ASCIIHexDecode filter def
/MultipleDataSources false def
/ImageMatrix [ px 0 0 py neg 0 py ] def
/Decode [ 0 1 0 1 0 1 ] def
end
/IMD 8 dict def
IMD begin
/ImageType 1 def
/Width mx def
/Height my def
/BitsPerComponent 1 def
/ImageMatrix [ mx 0 0 my neg 0 my ] def
/Decode [ 1 0 ] def
end
<<
/ImageType 3
/InterleaveType 2
/MaskDict IMD
/DataDict IDD
>> image GR
} bind def
/GIM {GS /inter exch def /my exch def /mx exch def /py exch def /px exch def /sy exch def /sx exch def 
translate 
sx sy scale
/DeviceGray setcolorspace
/IDD 8 dict def
IDD begin
/ImageType 1 def
/Width px def
/Height py def
/BitsPerComponent 8 def
/Interpolate inter def
/DataSource currentfile /ASCIIHexDecode filter def
/MultipleDataSources false def
/ImageMatrix [ px 0 0 py neg 0 py ] def
/Decode [ 0 1 ] def
end
/IMD 8 dict def
IMD begin
/ImageType 1 def
/Width mx def
/Height my def
/BitsPerComponent 1 def
/ImageMatrix [ mx 0 0 my neg 0 my ] def
/Decode [ 1 0 ] def
end
<<
/ImageType 3
/InterleaveType 2
/MaskDict IMD
/DataDict IDD
>> image GR
} bind def

/BFP { newpath moveto }  def
/BP { newpath } bind def 
/PL { lineto } bind def 
/PM { moveto } bind def 
/MT { moveto } bind def 
/LT { lineto } bind def 
/EFP { closepath fill } bind def
/ELP { stroke } bind def
/ECP { closepath stroke } bind def
/LW { setlinewidth } bind def
/TR { translate } bind def
/CT { concat } bind def
/RCT { matrix invertmatrix concat} bind def
/SC { scale } bind def
/CS { clipsave } bind def
/CR { cliprestore } bind def
%%EndProlog
%%Page: 1 1
%%PageOrientation: Portrait
save
GS
0 158 TR
1 -1  SC
GS
CS
1 setlinewidth
2 setlinecap
0 setlinejoin
[] 0 setdash
CR
GR
GS
0 0 TR
0.59535 0.59535 SC
CS
CR
CS
-0.5 -0.5 493 267 CL
1 GL
-0.5 -0.5 493 267 FR
1 1 0 SRGB
432.5 -0.5 60 60 FR
0 GL
GS
BP
0 0 MT
492 0 LT
492 266 LT
0 266 LT
ECP
GR
/Helvetica SF
20 FS
GS
433 18 moveto
[1 0 0 -1 0 0] concat
(x 100) show
GR
GS
433 37 moveto
[1 0 0 -1 0 0] concat
(y 100) show
GR
GS
433 56 moveto
[1 0 0 -1 0 0] concat
(t 90) show
GR
0 GL
GS
192 189 192 189 L
GR
0 GL
GS
192 189 192 69 L
GR
0 GL
GS
192 69 192 69 L
GR
0 GL
GS
192 69 212 69 L
GR
0 GL
GS
212 69 212 69 L
GR
0 GL
GS
212 69 212 89 L
GR
0 GL
GS
212 89 212 89 L
GR
0 GL
GS
212 89 232 89 L
GR
0 GL
GS
232 89 232 89 L
GR
0 GL
GS
232 89 232 69 L
GR
0 GL
GS
232 69 232 69 L
GR
0 GL
GS
232 69 252 69 L
GR
0 GL
GS
252 69 252 69 L
GR
0 GL
GS
252 69 252 189 L
GR
0 GL
GS
252 189 252 189 L
GR
0 GL
GS
252 189 192 189 L
GR
0 GL
GS
192 189 192 189 L
GR
0 GL
GS
192 189 192 189 L
GR
0 GL
GS
192 189 202 189 L
GR
0 GL
GS
202 189 202 189 L
GR
0 GL
GS
202 189 192 154 L
GR
0 GL
GS
192 154 192 154 L
GR
0 GL
GS
192 154 182 189 L
GR
0 GL
GS
182 189 182 189 L
GR
0 GL
GS
182 189 192 189 L
GR
0 GL
GS
192 189 192 189 L
GR
0 GL
GS
192 189 192 189 L
GR
GS
[1 0 0 1 0 0] CT
BP
192 189 MT
192 189 LT
192.154 189 LT
182.154 189 LT
182.154 189 LT
192.077 154.395 LT
192.077 154.395 LT
202 189 LT
202 189 LT
192 189 LT
192 189 LT
[1 0 0 1 0 0] RCT
EFP
GR
0 GL
GS
202 189 182 189 L
GR
GS
202 189 192 159 L
GR
GS
182 189 192 159 L
GR
CR
CS
GR
 restore
